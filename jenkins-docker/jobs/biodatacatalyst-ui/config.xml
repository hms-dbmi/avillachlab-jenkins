<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>pipeline_build_id</name>
          <defaultValue>MANUAL_RUN</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>git_hash</name>
          <defaultValue>*/master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>S3_BUCKET_NAME</name>
          <defaultValue>${stack_s3_bucket}</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@5.2.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>${pic_sure_biodatacatalyst_ui_repo}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${git_hash}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>aws s3 --sse=AES256 cp s3://$S3_BUCKET_NAME/releases/jenkins_pipeline_build_${pipeline_build_id}/pic-sure-hpds-ui.tar.gz .
PIC_SURE_HPDS_UI_VERSION=$(docker load -i pic-sure-hpds-ui.tar.gz | cut -d &apos;:&apos; -f 3)
docker tag hms-dbmi/pic-sure-hpds-ui:${PIC_SURE_HPDS_UI_VERSION} hms-dbmi/pic-sure-hpds-ui:TARGET_BUILD_VERSION

GIT_BRANCH_SHORT=$(echo ${GIT_BRANCH} | cut -d &quot;/&quot; -f 2)
GIT_COMMIT_SHORT=$(echo ${GIT_COMMIT} | cut -c1-7)

# Clean the dir out first
rm -rf biodatacatalyst-ui/open-pic-sure-bdc-frontend

if [ "${env_is_open_access}" = &apos;true&apos; ]; then
  # Move Open Access UI into BDC UI
  echo &quot;Is open access: Copying repository to biodatacatalyst-ui/open-pic-sure-bdc-frontend&quot;
  cp -r &quot;/var/jenkins_home/workspace/PIC-SURE Open Build&quot; &quot;biodatacatalyst-ui/open-pic-sure-bdc-frontend/&quot;
  echo &quot;ls -la biodatacatalyst-ui/open-pic-sure-bdc-frontend&quot;
else
  # Create an empty directory structure if not open access
  echo &quot;Is not open access: making empty dir structure&quot;
  mkdir -p &quot;biodatacatalyst-ui/open-pic-sure-bdc-frontend/ui/src/main/psamaui/&quot;
  mkdir -p &quot;biodatacatalyst-ui/open-pic-sure-bdc-frontend/ui/src/main/picsureui/&quot;
fi

# Check if &apos;psamaui&apos; directory exists at &apos;biodatacatalyst-ui/open-pic-sure-bdc-frontend/ui/src/main/&apos;
if [ ! -d &quot;biodatacatalyst-ui/open-pic-sure-bdc-frontend/ui/src/main/psamaui/&quot; ]; then
  mkdir -p &quot;biodatacatalyst-ui/open-pic-sure-bdc-frontend/ui/src/main/psamaui/&quot;
fi


# Move into workspace dir
cd biodatacatalyst-ui
docker build --build-arg FILE_SUFFIX=${pipeline_build_id} --build-arg IS_OPEN_ACCESS=${env_is_open_access} -t hms-dbmi/pic-sure-biodatacatalyst-ui:${GIT_BRANCH_SHORT}_${GIT_COMMIT_SHORT} .
mkdir -p docker_image_output
cd docker_image_output

docker save hms-dbmi/pic-sure-biodatacatalyst-ui:${GIT_BRANCH_SHORT}_${GIT_COMMIT_SHORT} | gzip &gt; pic-sure-ui.tar.gz
aws s3 --sse=AES256 cp pic-sure-ui.tar.gz s3://$S3_BUCKET_NAME/releases/jenkins_pipeline_build_${pipeline_build_id}/pic-sure-ui.tar.gz
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>