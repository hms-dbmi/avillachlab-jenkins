<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@5.0.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>${jenkins_git_repo}</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${jenkins_git_hash}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="empty-list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>cd dev-jenkins-terraform
env &gt; env.txt
terraform init
terraform apply -auto-approve \
-var &quot;git-commit=`echo ${GIT_COMMIT} |cut -c1-7`&quot; \
-var &quot;stack-s3-bucket=${stack_s3_bucket}&quot; \
-var &quot;stack-id=${stack_id}&quot; \
-var &quot;jenkins-subnet-id=${jenkins_subnet_id}&quot; \
-var &quot;jenkins-vpc-id=${jenkins_vpc_id}&quot; \
-var &quot;jenkins-instance-profile-name=${jenkins_instance_profile_name}&quot; \
-var &quot;jenkins-sg-ingress-http-cidr-blocks=${jenkins_sg_ingress_http_cidr_blocks}&quot; \
-var &quot;jenkins-sg-ingress-https-cidr-blocks=${jenkins_sg_ingress_https_cidr_blocks}&quot; \
-var &quot;jenkins-sg-ingress-ssh-cidr-blocks=${jenkins_sg_ingress_ssh_cidr_blocks}&quot; \
-var &quot;ami-id=${ami_id}&quot; \
-var &quot;dsm-url=${dsm_url}&quot; \
-var &quot;jenkins-config-s3-location=${jenkins_config_s3_location}&quot;

# removing
#-var &quot;access-cidr=${access_cidr}&quot; \
#-var &quot;provisioning-cidr=${provisioning_cidr}&quot;

aws s3 --sse=AES256 cp terraform.tfstate s3://${stack_s3_bucket}/jenkins_state/jenkins_${GIT_COMMIT}/terraform.tfstate
aws s3 --sse=AES256 cp env.txt s3://${stack_s3_bucket}/jenkins_state/jenkins_${GIT_COMMIT}/last_env.txt

INSTANCE_ID=`terraform state show aws_instance.dev-jenkins | grep &quot;\&quot;i-[a-f0-9]&quot; | cut -f 2 -d &quot;=&quot; | sed &apos;s/&quot;//g&apos;`

while [ -z $(/usr/local/bin/aws --region=us-east-1 ec2 describe-tags --filters &quot;Name=resource-id,Values=${INSTANCE_ID}&quot; | grep InitComplete) ];do echo &quot;still initializing&quot;;sleep 10;done

# get Jenkins IP
jenkins_ip_addr=`terraform state show aws_instance.dev-jenkins | grep private_ip | cut -f 2 -d &quot;=&quot; | sed &apos;s/\&quot;//g&apos; | sed &apos;s/ //g&apos; | grep &apos;172.39&apos;`

# update security group for jenkins access
# aws ec2 --region=us-east-1 authorize-security-group-ingress --group-id sg-0ab37675f33775da8 --ip-permissions IpProtocol=tcp,FromPort=443,ToPort=443,IpRanges=[{CidrIp=${jenkins_ip_addr}/32}]
# aws ec2 --region=us-east-1 update-security-group-rule-descriptions-ingress --group-id sg-0ab37675f33775da8 --ip-permissions IpProtocol=tcp,FromPort=443,ToPort=443,IpRanges=[{CidrIp=${jenkins_ip_addr}/32,Description=&quot;Allow Jenkins&quot;}]

echo &quot;http://$jenkins_ip_addr&quot;</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>